apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-temporalio-temporal-frontend
  namespace: temporal
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
        - name: check-cassandra-service
          image: busybox
          command: ['sh', '-c', 'until nslookup hello-temporalio-temporal-cassandra.temporal.svc.cluster.local; do echo waiting for cassandra service ...; sleep 1; done;']
        - name: check-cassandra
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SHOW VERSION"; do echo waiting for cassandra to start up ...; sleep 1; done;']
        - name: check-cassandra-temporal-schema
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SELECT keyspace_name FROM system_schema.keyspaces" | grep temporal$; do echo waiting for default keyspace to become ready ...; sleep 1; done;']
        - name: check-cassandra-visibility-schema
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SELECT keyspace_name FROM system_schema.keyspaces" | grep temporal_visibility$; do echo waiting for visibility keyspace to become ready ...; sleep 1; done;']
      containers:
        - name: temporal-frontend
          image: "temporalio/server:1.16.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ENABLE_ES
              value: ""
            - name: ES_SEEDS
              value: "elasticsearch-master-headless"
            - name: ES_PORT
              value: "9200"
            - name: ES_VERSION
              value: "v7"
            - name: ES_SCHEME
              value: "http"
            - name: ES_VIS_INDEX
              value: "temporal_visibility_v1_dev"
            - name: ES_USER
              value: ""
            - name: ES_PWD
              value: ""
            - name: SERVICES
              value: frontend
            - name: TEMPORAL_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hello-temporalio-temporal-default-store
                  key: password
            - name: TEMPORAL_VISIBILITY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hello-temporalio-temporal-visibility-store
                  key: password
          ports:
            - name: rpc
              containerPort: 7233
              protocol: TCP
          livenessProbe:
             initialDelaySeconds: 150
             tcpSocket:
               port: rpc
          volumeMounts:
            - name: config
              mountPath: /etc/temporal/config/config_template.yaml
              subPath: config_template.yaml
            - name: dynamic-config
              mountPath: /etc/temporal/dynamic_config
      volumes:
        - name: config
          configMap:
            name: "hello-temporalio-temporal-frontend-config"
        - name: dynamic-config
          configMap:
            name: "hello-temporalio-temporal-dynamic-config"
            items:
            - key: dynamic_config.yaml
              path: dynamic_config.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-temporalio-temporal-history
  namespace: temporal
  labels:
    app: history
spec:
  replicas: 1
  selector:
    matchLabels:
      app: history
  template:
    metadata:
      labels:
        app: history
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
        - name: check-cassandra-service
          image: busybox
          command: ['sh', '-c', 'until nslookup hello-temporalio-temporal-cassandra.temporal.svc.cluster.local; do echo waiting for cassandra service ...; sleep 1; done;']
        - name: check-cassandra
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SHOW VERSION"; do echo waiting for cassandra to start up ...; sleep 1; done;']
        - name: check-cassandra-temporal-schema
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SELECT keyspace_name FROM system_schema.keyspaces" | grep temporal$; do echo waiting for default keyspace to become ready ...; sleep 1; done;']
        - name: check-cassandra-visibility-schema
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SELECT keyspace_name FROM system_schema.keyspaces" | grep temporal_visibility$; do echo waiting for visibility keyspace to become ready ...; sleep 1; done;']
      containers:
        - name: temporal-history
          image: "temporalio/server:1.16.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ENABLE_ES
              value: ""
            - name: ES_SEEDS
              value: "elasticsearch-master-headless"
            - name: ES_PORT
              value: "9200"
            - name: ES_VERSION
              value: "v7"
            - name: ES_SCHEME
              value: "http"
            - name: ES_VIS_INDEX
              value: "temporal_visibility_v1_dev"
            - name: ES_USER
              value: ""
            - name: ES_PWD
              value: ""
            - name: SERVICES
              value: history
            - name: TEMPORAL_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hello-temporalio-temporal-default-store
                  key: password
            - name: TEMPORAL_VISIBILITY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hello-temporalio-temporal-visibility-store
                  key: password
          ports:
            - name: rpc
              containerPort: 7234
              protocol: TCP
          livenessProbe:
             initialDelaySeconds: 150
             tcpSocket:
               port: rpc
          volumeMounts:
            - name: config
              mountPath: /etc/temporal/config/config_template.yaml
              subPath: config_template.yaml
            - name: dynamic-config
              mountPath: /etc/temporal/dynamic_config
      volumes:
        - name: config
          configMap:
            name: "hello-temporalio-temporal-history-config"
        - name: dynamic-config
          configMap:
            name: "hello-temporalio-temporal-dynamic-config"
            items:
            - key: dynamic_config.yaml
              path: dynamic_config.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-temporalio-temporal-matching
  namespace: temporal
  labels:
    app: matching
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matching
  template:
    metadata:
      labels:
        app: matching
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
        - name: check-cassandra-service
          image: busybox
          command: ['sh', '-c', 'until nslookup hello-temporalio-temporal-cassandra.temporal.svc.cluster.local; do echo waiting for cassandra service ...; sleep 1; done;']
        - name: check-cassandra
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SHOW VERSION"; do echo waiting for cassandra to start up ...; sleep 1; done;']
        - name: check-cassandra-temporal-schema
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SELECT keyspace_name FROM system_schema.keyspaces" | grep temporal$; do echo waiting for default keyspace to become ready ...; sleep 1; done;']
        - name: check-cassandra-visibility-schema
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SELECT keyspace_name FROM system_schema.keyspaces" | grep temporal_visibility$; do echo waiting for visibility keyspace to become ready ...; sleep 1; done;']
      containers:
        - name: temporal-matching
          image: "temporalio/server:1.16.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ENABLE_ES
              value: ""
            - name: ES_SEEDS
              value: "elasticsearch-master-headless"
            - name: ES_PORT
              value: "9200"
            - name: ES_VERSION
              value: "v7"
            - name: ES_SCHEME
              value: "http"
            - name: ES_VIS_INDEX
              value: "temporal_visibility_v1_dev"
            - name: ES_USER
              value: ""
            - name: ES_PWD
              value: ""
            - name: SERVICES
              value: matching
            - name: TEMPORAL_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hello-temporalio-temporal-default-store
                  key: password
            - name: TEMPORAL_VISIBILITY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hello-temporalio-temporal-visibility-store
                  key: password
          ports:
            - name: rpc
              containerPort: 7235
              protocol: TCP
          livenessProbe:
             initialDelaySeconds: 150
             tcpSocket:
               port: rpc
          volumeMounts:
            - name: config
              mountPath: /etc/temporal/config/config_template.yaml
              subPath: config_template.yaml
            - name: dynamic-config
              mountPath: /etc/temporal/dynamic_config
      volumes:
        - name: config
          configMap:
            name: "hello-temporalio-temporal-matching-config"
        - name: dynamic-config
          configMap:
            name: "hello-temporalio-temporal-dynamic-config"
            items:
            - key: dynamic_config.yaml
              path: dynamic_config.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-temporalio-temporal-worker
  namespace: temporal
  labels:
    app: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
        - name: check-cassandra-service
          image: busybox
          command: ['sh', '-c', 'until nslookup hello-temporalio-temporal-cassandra.temporal.svc.cluster.local; do echo waiting for cassandra service ...; sleep 1; done;']
        - name: check-cassandra
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SHOW VERSION"; do echo waiting for cassandra to start up ...; sleep 1; done;']
        - name: check-cassandra-temporal-schema
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SELECT keyspace_name FROM system_schema.keyspaces" | grep temporal$; do echo waiting for default keyspace to become ready ...; sleep 1; done;']
        - name: check-cassandra-visibility-schema
          image: "cassandra:3.11.3"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until cqlsh hello-temporalio-temporal-cassandra.temporal.svc.cluster.local 9042 -e "SELECT keyspace_name FROM system_schema.keyspaces" | grep temporal_visibility$; do echo waiting for visibility keyspace to become ready ...; sleep 1; done;']
      containers:
        - name: temporal-worker
          image: "temporalio/server:1.16.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ENABLE_ES
              value: ""
            - name: ES_SEEDS
              value: "elasticsearch-master-headless"
            - name: ES_PORT
              value: "9200"
            - name: ES_VERSION
              value: "v7"
            - name: ES_SCHEME
              value: "http"
            - name: ES_VIS_INDEX
              value: "temporal_visibility_v1_dev"
            - name: ES_USER
              value: ""
            - name: ES_PWD
              value: ""
            - name: SERVICES
              value: worker
            - name: TEMPORAL_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hello-temporalio-temporal-default-store
                  key: password
            - name: TEMPORAL_VISIBILITY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hello-temporalio-temporal-visibility-store
                  key: password
          ports:
            - name: rpc
              containerPort: 7239
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/temporal/config/config_template.yaml
              subPath: config_template.yaml
            - name: dynamic-config
              mountPath: /etc/temporal/dynamic_config
      volumes:
        - name: config
          configMap:
            name: "hello-temporalio-temporal-worker-config"
        - name: dynamic-config
          configMap:
            name: "hello-temporalio-temporal-dynamic-config"
            items:
            - key: dynamic_config.yaml
              path: dynamic_config.yaml
